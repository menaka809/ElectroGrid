package ElectroGrid.Inquiry.service;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import DB.DatabaseConnection;
import ElectroGrid.Inquiry.model.Inquiry;

public class InquiryService {
	
	public static List<Inquiry> getAllInquiry() throws ClassNotFoundException, SQLException{
		
		
		Connection con=DatabaseConnection.getConnection();
		String query="select * from inquiry ";
		PreparedStatement preparedstatement=con.prepareStatement(query);
		ResultSet result = preparedstatement.executeQuery(query);
		List<Inquiry> list=new ArrayList<>();
		while(result.next()) {
			 Inquiry inquiry=new Inquiry();
			 inquiry.setInquiryId(result.getInt(1));
			 inquiry.setCustomerId(result.getString(2));
			 inquiry.setCustomerName(result.getString(3));
			 inquiry.setCustomerNIC(result.getString(4));
			 inquiry.setContactNo(result.getInt(5));
			 inquiry.setInquiryType(result.getString(6));
			 inquiry.setInquiryDate(result.getString(7));
			 inquiry.setDescription(result.getString(8));
			 	
				
			 list.add(inquiry);
			
		
		}
	
		
		 return list;
	}
	public static ArrayList<Inquiry> getOneInquiry(String id) throws ClassNotFoundException, SQLException{
		
		
		Connection con=DatabaseConnection.getConnection();
		int Id=Integer.parseInt(id);
		String query="select * from inquiry where inquiryId='"+Id+"'";
		PreparedStatement preparedstatement=con.prepareStatement(query);
		ResultSet result = preparedstatement.executeQuery(query);
		ArrayList<Inquiry> list=new ArrayList<>();
		while(result.next()) {
			 Inquiry inquiry=new Inquiry();
			 inquiry.setInquiryId(result.getInt(1));
			 inquiry.setCustomerId(result.getString(2));
			 inquiry.setCustomerName(result.getString(3));
			 inquiry.setCustomerNIC(result.getString(4));
			 inquiry.setContactNo(result.getInt(5));
			 inquiry.setInquiryType(result.getString(6));
			 inquiry.setInquiryDate(result.getString(7));
			 inquiry.setDescription(result.getString(8));	
				
			 list.add(inquiry);
			
		
		}
	
		
		 return list;
	}
	public static Inquiry createInquiry(Inquiry inquiry) throws ClassNotFoundException, SQLException {
		Connection con=DatabaseConnection.getConnection();
		String query="insert into  inquiry values(?,?,?,?,?,?,?,?) ";
		PreparedStatement preparedstatement=con.prepareStatement(query);
		
		preparedstatement.setInt(1, inquiry.getInquiryId());
		preparedstatement.setString(2, inquiry.getCustomerId());
		preparedstatement.setString(3, inquiry.getCustomerName());
		preparedstatement.setString(4, inquiry.getCustomerNIC());
		preparedstatement.setInt(5, inquiry.getContactNo());
		preparedstatement.setString(6, inquiry.getInquiryType());
		preparedstatement.setString(7, inquiry.getInquiryDate());
		preparedstatement.setString(8, inquiry.getDescription());
		
		boolean isCreate=preparedstatement.execute();
		if(!isCreate) {
			return inquiry;
		}else {
			return null;
		}
		
		
	}
	
	public static Inquiry updateInquiry(Inquiry inquiry,String id) throws ClassNotFoundException, SQLException {
		Connection con=DatabaseConnection.getConnection();
		//error
		String query="update inquiry set customerName=?  where inquiryId='"+id+"' ";
		PreparedStatement preparedstatement=con.prepareStatement(query);
//		preparedstatement.setInt(1, inquiry.getInquiryId());
		preparedstatement.setString(2, inquiry.getCustomerName());
		//System.out.println("hello");
		int isUpdate=preparedstatement.executeUpdate();
		if(isUpdate>0) {
			return inquiry;
		}else {
			return null;
		}
		
		
	}
	public static boolean deleteInquiry(int id) throws ClassNotFoundException, SQLException {
		Connection con=DatabaseConnection.getConnection();
		String query="delete from inquiry where inquiryId=?";
		PreparedStatement preparedstatement=con.prepareStatement(query);
		preparedstatement.setInt(1,id);
//		Statement  statement=con.createStatement();
//		int result = statement.executeUpdate(query);
		int result = preparedstatement.executeUpdate(query);
		if(result>0)
			return true;
		else
			return false;
	}
}
